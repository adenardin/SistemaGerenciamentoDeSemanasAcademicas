/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Controle.PalestraCL;
import Negocio.PalestraBO;
import java.text.Format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ronaima
 */
public class PalestraUI extends javax.swing.JFrame {
    private static PalestraUI palestraInstancia;  
    /**
     * Creates new form PalestraUI
     */
    public PalestraUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCodigoPalestra = new javax.swing.JTextField();
        txtTituloPalestra = new javax.swing.JTextField();
        txtDataPalestra = new javax.swing.JTextField();
        txtHoraInicioPalestra = new javax.swing.JTextField();
        txtDuracaoPalestra = new javax.swing.JTextField();
        txtDescricaoPalestra = new javax.swing.JTextField();
        txtConteudosPalestra = new javax.swing.JTextField();
        txtCodPalestrante = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPalestra = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nova Palestra");
        setResizable(false);

        jLabel1.setText("Codigo Palestra: ");

        jLabel2.setText("Titulo Palestra:");

        jLabel3.setText("Data:");

        jLabel4.setText("Hora de Inicio:");

        jLabel5.setText("Duração:");

        jLabel6.setText("Descrição:");

        jLabel7.setText("Conteudos:");

        jLabel8.setText("Codigo Palestrante:");

        txtTituloPalestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTituloPalestraActionPerformed(evt);
            }
        });

        txtDataPalestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataPalestraActionPerformed(evt);
            }
        });

        txtHoraInicioPalestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoraInicioPalestraActionPerformed(evt);
            }
        });

        txtDuracaoPalestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDuracaoPalestraActionPerformed(evt);
            }
        });

        txtDescricaoPalestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescricaoPalestraActionPerformed(evt);
            }
        });

        txtConteudosPalestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConteudosPalestraActionPerformed(evt);
            }
        });

        txtCodPalestrante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodPalestranteActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        tblPalestra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPalestra.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tblPalestraAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(tblPalestra);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(3, 3, 3)
                                .addComponent(txtDuracaoPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHoraInicioPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(3, 3, 3)
                                .addComponent(txtDataPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(4, 4, 4)
                                .addComponent(txtTituloPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodigoPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(4, 4, 4)
                                .addComponent(txtCodPalestrante, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtConteudosPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDescricaoPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(232, 232, 232)
                .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(240, 240, 240))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigoPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTituloPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDataPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtHoraInicioPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDuracaoPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDescricaoPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtConteudosPalestra, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCodPalestrante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir)
                    .addComponent(btnPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static synchronized PalestraUI getInstance() {
        if (palestraInstancia == null) {
            palestraInstancia = new PalestraUI();
        }
        palestraInstancia.setLocationRelativeTo(null);
        return palestraInstancia;
    }
    
    private void txtTituloPalestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTituloPalestraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTituloPalestraActionPerformed

    private void txtHoraInicioPalestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoraInicioPalestraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoraInicioPalestraActionPerformed

    private void txtDescricaoPalestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescricaoPalestraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescricaoPalestraActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        PalestraBO palestra;
        try {
            palestra = readPalestra();
            PalestraCL.newPalestra(palestra);
            JOptionPane.showMessageDialog(null, "Palestra cadastrada com sucesso!");
            retrievePalestra();
            txtCodigoPalestra.setText("");
            txtTituloPalestra.setText("");
            txtDataPalestra.setText("");
            txtHoraInicioPalestra.setText("");
            txtDuracaoPalestra.setText("");
            txtDescricaoPalestra.setText("");
            txtConteudosPalestra.setText("");
            txtCodPalestrante.setText("");
        } catch (ParseException ex) {
            Logger.getLogger(PalestraUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        PalestraBO palestra;
        try {
            palestra = readPalestra();
            PalestraCL.newPalestra(palestra);
            JOptionPane.showMessageDialog(null, "Palestra cadastrada com sucesso!");
            retrievePalestra();
            txtCodigoPalestra.setText("");
            txtTituloPalestra.setText("");
            txtDataPalestra.setText("");
            txtHoraInicioPalestra.setText("");
            txtDuracaoPalestra.setText("");
            txtDescricaoPalestra.setText("");
            txtConteudosPalestra.setText("");
            txtCodPalestrante.setText("");// TODO add your handling code here:
        } catch (ParseException ex) {
            Logger.getLogger(PalestraUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int codigo = Integer.parseInt(txtCodigoPalestra.getText());
        PalestraCL.deletePalestra(codigo);
        retrievePalestra();
        txtCodigoPalestra.setText("");
        txtTituloPalestra.setText("");
        txtDataPalestra.setText("");
        txtHoraInicioPalestra.setText("");
        txtDuracaoPalestra.setText("");
        txtDescricaoPalestra.setText("");
        txtConteudosPalestra.setText("");
        txtCodPalestrante.setText("");
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        int     cod = Integer.parseInt(txtCodigoPalestra.getText());
//        double  rend = Double.parseDouble(txtRenda.getText());
        String  nom = txtTituloPalestra.getText();
        
        if(nom != null){
            PalestraBO c = PalestraCL.findPalestraTitulo(nom);
            findPalestra(c);
        }else if(String.valueOf(cod) != null){
            
            String str = String.valueOf(cod);
            // suppose str becomes null after some operation(s).
            int number = 0;
            try
            {
                if(str != null)
                  number = Integer.parseInt(str);
            }
            catch (NumberFormatException e)
            {
                number = 0;
            }            
            
            PalestraBO c = PalestraCL.findPalestraCod(number);
            findPalestra(c);
        }else{
            JOptionPane.showMessageDialog(null,"Digite um parâmetro válido!");
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void txtDataPalestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataPalestraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataPalestraActionPerformed

    private void txtDuracaoPalestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDuracaoPalestraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDuracaoPalestraActionPerformed

    private void txtConteudosPalestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConteudosPalestraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConteudosPalestraActionPerformed

    private void txtCodPalestranteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodPalestranteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodPalestranteActionPerformed

    private void tblPalestraAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tblPalestraAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_tblPalestraAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PalestraUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PalestraUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PalestraUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PalestraUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PalestraUI().setVisible(true);
        });
    }
    
    public PalestraBO readPalestra() throws ParseException{        
        int codPalestra = Integer.parseInt(txtCodigoPalestra.getText());        
        String tituloPalestra = txtTituloPalestra.getText(); 
            
        String dataDaPalestra = txtDataPalestra.getText();
        SimpleDateFormat dp = new SimpleDateFormat("dd/MM/yyyy");
        Date dataPalestra = dp.parse(dataDaPalestra);

        String horaInicioDaPalestra = txtHoraInicioPalestra.getText();
        SimpleDateFormat hip = new SimpleDateFormat("HH:mm");
        Date horaInicioPalestra = hip.parse(horaInicioDaPalestra);             
            
        String tempoDeDuracaoDaPalestra = txtDuracaoPalestra.getText();
        SimpleDateFormat tdp = new SimpleDateFormat("HH:mm");
        Date duracaoPalestra = tdp.parse(tempoDeDuracaoDaPalestra);
  
        String descricaoPalestra = txtDescricaoPalestra.getText();        
        String conteudosPalestra = txtConteudosPalestra.getText();        
        String CodigoPalestrante = txtCodPalestrante.getText();
        
        int codigoPalestrante = Integer.parseInt(CodigoPalestrante);
        
        //         PalestraBO(int codPalestra, String tituloPalestra, Date dataPalestra, Date horaInicioPalestra, Date duracaoPalestra, String descricaoPalestra, String conteudosPalestra, codigoPalestrante)  
        return new PalestraBO(    codPalestra,        tituloPalestra,      dataPalestra,      horaInicioPalestra,      duracaoPalestra,        descricaoPalestra,        conteudosPalestra, codigoPalestrante);
    }

    public void findPalestra(PalestraBO p){
        txtCodigoPalestra.setText(String.valueOf(p.getCodPalestra()));        
        txtTituloPalestra.setText(p.getTituloPalestra());

        SimpleDateFormat dp = new SimpleDateFormat("dd/MM/yyyy");
        txtDataPalestra.setText(dp.format(p.getDataPalestra().toString()));
        
        SimpleDateFormat hip = new SimpleDateFormat("HH:mm");
        txtHoraInicioPalestra.setText(hip.format(p.getHoraInicioPalestra().toString()));
        
        SimpleDateFormat tp = new SimpleDateFormat("HH:mm");
        txtDuracaoPalestra.setText(tp.format(p.getDuracaoPalestra().toString()));
        
        txtDescricaoPalestra.setText(p.getDescricaoPalestra()); 
        txtCodPalestrante.setText(tp.format(p.getDescricaoPalestra()));
    }
    
    public void retrievePalestra(){
            DefaultTableModel modelinho = new DefaultTableModel();
            modelinho.addColumn("Codigo Palestra");
            modelinho.addColumn("Titulo Palestra");
            modelinho.addColumn("Data Palestra");
            modelinho.addColumn("Hora Inicio Palestra");
            modelinho.addColumn("Duração Palestra");
            modelinho.addColumn("Descrição Palestra");            
            modelinho.addColumn("Conteudo Palestra");
            modelinho.addColumn("Codigo Palestrante");
            tblPalestra.setModel(modelinho);
            
            for(PalestraBO p:PalestraCL.showPalestra()){

                String  getTituloPalestra = p.getTituloPalestra();
                Integer getCodPalestra = p.getCodPalestra();
                
                // Define o formato da data e após aplica mascara para preencher os campos de texto.
                Format formatterDate = new SimpleDateFormat("dd/MM/yyyy");

                // Define o formato da data e após aplica mascara para preencher os campos de texto.
                Format formatterTime = new SimpleDateFormat("HH:mm");
                
                String    getDataInicioEvento = formatterDate.format(p.getDataPalestra());                
                String    getHoraInicioPalestra = formatterTime.format(p.getHoraInicioPalestra());                
                String    getDuracaoPalestra = formatterTime.format(p.getDuracaoPalestra());
                
                String  getDescricaoPalestra = p.getDescricaoPalestra();
                String  getConteudosPalestra = p.getConteudosPalestra();
                Integer getCodPalestrante = p.getCodPalestrante();
                
                    modelinho.addRow(new Object[]{
                        p.getCodPalestra(),
                        p.getTituloPalestra(),
                        
                        getDataInicioEvento,
                        getHoraInicioPalestra,
                        getDuracaoPalestra,                        
                        
                        p.getDescricaoPalestra(),
                        p.getConteudosPalestra(),
                        p.getCodPalestrante()
                    });
            }
            tblPalestra.setModel(modelinho);
    }
    
    private void writePalestra(PalestraBO c){
        txtTituloPalestra.setText(c.getTituloPalestra());
        txtCodigoPalestra.setText(String.valueOf(c.getCodPalestra()));

        SimpleDateFormat dp = new SimpleDateFormat("dd/MM/yyyy");
        txtDataPalestra.setText(dp.format(c.getDataPalestra().toString()));

        SimpleDateFormat hip = new SimpleDateFormat("HH:mm");
        txtHoraInicioPalestra.setText(hip.format(c.getHoraInicioPalestra().toString()));

        SimpleDateFormat tp = new SimpleDateFormat("HH:mm");
        txtDuracaoPalestra.setText(tp.format(c.getDuracaoPalestra().toString()));
        
        txtConteudosPalestra.setText(c.getDescricaoPalestra());
        txtCodPalestrante.setText(String.valueOf(c.getCodPalestrante()));

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    javax.swing.JTable tblPalestra;
    private javax.swing.JTextField txtCodPalestrante;
    private javax.swing.JTextField txtCodigoPalestra;
    private javax.swing.JTextField txtConteudosPalestra;
    private javax.swing.JTextField txtDataPalestra;
    private javax.swing.JTextField txtDescricaoPalestra;
    private javax.swing.JTextField txtDuracaoPalestra;
    private javax.swing.JTextField txtHoraInicioPalestra;
    private javax.swing.JTextField txtTituloPalestra;
    // End of variables declaration//GEN-END:variables
}
